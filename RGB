#include <M5Core2.h>
#include <TinyGPS++.h>

TinyGPSPlus gps;
HardwareSerial GPSModule(1);

// Variables to store the previous GPS data for comparison
float prevLat = 0, prevLng = 0, prevAlt = 0;
int prevSat = 0;
float prevSpeed = 0;

void setup() {
    M5.begin();
    Serial.begin(115200);
    GPSModule.begin(9600, SERIAL_8N1, 13, 14); // RX, TX pins for GPS

    M5.Lcd.fillScreen(BLACK);
    M5.Lcd.setTextSize(2);
}

void loop() {
    while (GPSModule.available() > 0) {
        if (gps.encode(GPSModule.read())) {
            displayGPSInfo();
        }
    }
    M5.update();
}

void displayGPSInfo() {
    if (gps.location.isValid()) {
        // Latitude (in Red)
        if (prevLat != gps.location.lat()) {
            prevLat = gps.location.lat();
            M5.Lcd.setTextColor(RED);
            M5.Lcd.setCursor(0, 0);
            M5.Lcd.fillRect(0, 0, 320, 30, BLACK); // Clear the line
            M5.Lcd.printf("Latitude: %.6f\n", prevLat);
        }

        // Longitude (in Red)
        if (prevLng != gps.location.lng()) {
            prevLng = gps.location.lng();
            M5.Lcd.setTextColor(RED);
            M5.Lcd.setCursor(0, 30);
            M5.Lcd.fillRect(0, 30, 320, 30, BLACK); // Clear the line
            M5.Lcd.printf("Longitude: %.6f\n", prevLng);
        }

        // Satellites (in Blue)
        if (prevSat != gps.satellites.value()) {
            prevSat = gps.satellites.value();
            M5.Lcd.setTextColor(BLUE);
            M5.Lcd.setCursor(0, 60);
            M5.Lcd.fillRect(0, 60, 320, 30, BLACK); // Clear the line
            M5.Lcd.printf("Satellites: %d\n", prevSat);
        }

        // Altitude (in Green)
        if (prevAlt != gps.altitude.meters()) {
            prevAlt = gps.altitude.meters();
            M5.Lcd.setTextColor(GREEN);
            M5.Lcd.setCursor(0, 90);
            M5.Lcd.fillRect(0, 90, 320, 30, BLACK); // Clear the line
            M5.Lcd.printf("Altitude: %.2f m\n", prevAlt);
        }

        // Speed (in Orange)
        if (prevSpeed != gps.speed.kmph()) {
            prevSpeed = gps.speed.kmph();
            M5.Lcd.setTextColor(ORANGE);
            M5.Lcd.setCursor(0, 120);
            M5.Lcd.fillRect(0, 120, 320, 30, BLACK); // Clear the line
            M5.Lcd.printf("Speed: %.2f km/h\n", prevSpeed);
        }

        // Time (in Purple)
        if (gps.date.isValid() && gps.time.isValid()) {
            M5.Lcd.setTextColor(PURPLE);
            M5.Lcd.setCursor(0, 150);
            M5.Lcd.fillRect(0, 150, 320, 30, BLACK); // Clear the line
            M5.Lcd.printf("%02d/%02d/%04d %02d:%02d:%02d\n", gps.date.day(), gps.date.month(), gps.date.year(), gps.time.hour(), gps.time.minute(), gps.time.second());
        }
    } else {
        M5.Lcd.setTextColor(WHITE);
        M5.Lcd.setCursor(0, 0);
        M5.Lcd.fillRect(0, 0, 320, 180, BLACK); // Clear the area
        M5.Lcd.println("Searching for GPS signal...");
    }
}
